{"version":3,"sources":["actions/types.js","components/contacts/Contact.js","actions/contactAction.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFoundPage.js","components/Test/Test.js","components/contacts/EditContact.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","GET_CONTACT","UPDATE_CONTACT","Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","float","color","bind","to","marginRight","Component","protoType","PropTypes","object","isRequired","func","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","get","res","data","Header","branding","href","defaultProps","string","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","addContact","history","push","target","post","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","updateContact","nextProps","nextState","getContact","put","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","App","exact","path","component","About","NotFoundpage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f3703bd.chunk.js","sourcesContent":["export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';","import React, { Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {deleteContact} from '../../actions/contactAction';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n class Contact extends Component {\r\n   state={\r\n       showContactInfo : false\r\n\r\n   };\r\n   onDeleteClick = id => {\r\n        this.props.deleteContact(id);\r\n\r\n   };\r\n\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state={};\r\n    //     this.onShowClick=this.onShowClick.bind(this);\r\n    // }\r\n    \r\n\r\n    // onShowClick = () =>{\r\n    //    this.setState({showContactInfo : !this.state.showContactInfo});\r\n    //     // this.state=({showContactInfo : false})\r\n    //    };\r\n\r\n    \r\n    // onShowClick = () => {\r\n    //     console.log(this.state);\r\n    // }\r\n\r\n    // onShowClick = (name,e) => {\r\n    //     console.log(name);\r\n    // }\r\n\r\n    // onShowClick = e => {\r\n    //     console.log(e.target);\r\n    // }\r\n    // static protoTypes = {\r\n      \r\n    //         name : PropTypes.string.isRequired,\r\n    //         email : PropTypes.string.isRequired,\r\n    //         phone : PropTypes.string.isRequired\r\n       \r\n    // };\r\n    render() {\r\n        \r\n        const {id,name,email,phone}=this.props.contact;\r\n        const {showContactInfo}=this.state;\r\n        \r\n        return (\r\n            // <div>\r\n            //     <h4>{this.props.name}</h4>\r\n            //     <ul>\r\n            //         <li>{this.props.email}</li>\r\n            //         <li>{this.props.phone}</li>\r\n            //     </ul>\r\n            // </div>\r\n\r\n          \r\n            <div className=\"card card-body mb-3\">\r\n                {/* <h4>{ename} <i onClick={this.onShowClick.bind(this,ename)} className=\"fas fa-caret-down\"/></h4> */}\r\n                <h4>{name} {' '} \r\n                <i \r\n                onClick={() => \r\n                this.state = this.setState({showContactInfo : !this.state.showContactInfo})}\r\n                 className=\"fas fa-caret-down\"   style = {{cursor: 'pointer'}}/>\r\n                 <i className=\"fas fa-times\" \r\n                 style={\r\n                     { cursor : 'pointer',float : 'right',color : 'red'}} onClick={this.onDeleteClick.bind(this,id)}></i>\r\n                     \r\n                       <Link to = {`contact/edit/${id}`}>\r\n                       <i className=\"fas fa-pencil-alt\" \r\n                 style={\r\n                     { cursor : 'pointer',float : 'right',color : 'black' , marginRight : '1rem'}} > </i>\r\n                       </Link>\r\n                     </h4>\r\n                   \r\n                 \r\n                 {showContactInfo ? (<ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">   Email :{email}</li>\r\n                   <li className =\"list-group-item\"> phone :{phone}</li>\r\n                </ul>) : null}\r\n                \r\n            </div>\r\n\r\n                    )\r\n                \r\n\r\n            }\r\n}\r\n\r\n\r\nContact.protoType={\r\n    // ename : PropTypes.string.isRequired,\r\n    // email : PropTypes.string.isRequired,\r\n    // phone : PropTypes.string.isRequired\r\n    contact : PropTypes.object.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n    //deleteClickHandler : PropTypes.func.isRequired\r\n};\r\nexport default connect(null, { deleteContact } )\r\n(Contact);\r\n","import { GET_CONTACTS,DELETE_CONTACT,ADD_CONTACT ,GET_CONTACT,UPDATE_CONTACT} from './types';\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getContacts = () => async dispatch =>{\r\n   \r\n   const res= await axios.get('https://jsonplaceholder.typicode.com/users')\r\n    dispatch ({\r\n         type : GET_CONTACTS,\r\n         payload:res.data\r\n    });\r\n};\r\n\r\nexport const getContact = (id) => async dispatch =>{\r\n   \r\n     const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      dispatch ({\r\n           type : GET_CONTACT,\r\n           payload:res.data\r\n      });\r\n  }; \r\n\r\nexport const deleteContact = (id) =>async dispatch => {\r\n     await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    dispatch({\r\n         type : DELETE_CONTACT,\r\n         payload:id\r\n    });\r\n};\r\n\r\n\r\nexport const addContact = contact => async dispatch =>{\r\n    const res=await axios.post('https://jsonplaceholder.typicode.com/users',  \r\n    contact\r\n    );//in post data will come from contact\r\n     dispatch ({\r\n         type : ADD_CONTACT,\r\n         payload:res.data\r\n    });\r\n};\r\n\r\nexport const updateContact = contact => async dispatch =>{\r\n     const res=await axios.put(\r\n          `https://jsonplaceholder.typicode.com/users/${contact.id}`,  \r\n     contact\r\n     );\r\n      dispatch ({\r\n          type : UPDATE_CONTACT,\r\n          payload:res.data\r\n     });\r\n };","import React, { Component } from 'react';\r\nimport Contact from './Contact'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getContacts } from '../../actions/contactAction';\r\n \r\nclass Contacts extends Component {\r\ncomponentDidMount(){\r\n    this.props.getContacts();\r\n}\r\n\r\n\r\nrender() {\r\n        const {contacts} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">contact</span>list\r\n                    </h1>\r\n                {contacts.map(contact =>(\r\n                    <Contact  key ={contact.id} \r\n                    contact ={contact} />\r\n                ))}\r\n            </React.Fragment>\r\n\r\n                   )\r\n               \r\n   \r\n        \r\n        // const {contacts} = this.state;\r\n        // return (\r\n        //     return (\r\n        //         <React.Fragment>\r\n        //     {contacts.map(contact =>(\r\n        //         <Contact  key ={contact.id} \r\n        //         contact ={contact} deleteClickHandler={this.deleteContact.bind(this,contact.id)}/>\r\n        //     ))}\r\n        // </React.Fragment>\r\n            \r\n        // )\r\n    }\r\n}\r\n\r\nContacts.propTypes={\r\n    contacts : PropTypes.array.isRequired,\r\n    getContacts:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\ncontacts: state.contact.contacts\r\n});\r\n\r\n\r\nexport default connect( \r\n    mapStateToProps,\r\n    {getContacts}\r\n    )(Contacts);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n const Header = (props) => {\r\n     const {branding} = props;\r\n    return (\r\n       \r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href =\"/\" className =\"navbar-brand\">\r\n                {branding}\r\n            </a>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            <li className =\"nav-item\">\r\n            <i className=\"fas fa-home\" />\r\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n            </li>\r\n\r\n            <li className =\"nav-item\">\r\n            <i className=\"fas fa-plus\" />\r\n                <Link to=\"/contact/add\" className=\"nav-link\">Add</Link>\r\n            </li>\r\n\r\n            <li className =\"nav-item\">\r\n            <i className=\"fas fa-question\" />\r\n                <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n            </li>\r\n\r\n            </ul>\r\n        </div>\r\n\r\n        </nav> \r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding : 'MyApp'\r\n};\r\nHeader.protoType ={\r\n    branding : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\n const TextInputGroup = ({\r\n\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n\r\n }) => {\r\n    return (\r\n        <div>\r\n             <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">{label}</label>\r\n                        <input type={type} \r\n                        // className=\"form-control form-control-lg is-invalid\"\r\n                        className = {classnames('form-control form-control-lg',{'is-invalid' : error})}\r\n                         placeholder={placeholder}\r\n                         name={name}\r\n                         type={type} \r\n                         value ={value}  onChange = {onChange}  /> \r\n\r\n                         {/* <div className =\"invalid-feedback\">This is a wrong way</div> */}\r\n                    {error && \r\n                    <div className = \"invalid-feedback\"> {error} </div> }\r\n                    </div>\r\n                    \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTextInputGroup.propTypes ={\r\n    name : PropTypes.string.isRequired,\r\n    placeholder : PropTypes.string.isRequired,\r\n    value : PropTypes.string.isRequired,\r\n    type : PropTypes.string.isRequired,\r\n    onChange : PropTypes.func.isRequired,\r\n    label : PropTypes.string.isRequired,\r\n    error :PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type:\"text\"\r\n}\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\n\r\n// import {v4 as uuid} from 'uuid';\r\nimport TextInputGroup from '../../components/layout/TextInputGroup';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addContact} from '../../actions/contactAction';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors :{}\r\n    }\r\n\r\n   \r\n    \r\n    onSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        const {name,email,phone}  =this.state;\r\n\r\n        //Check for Errors\r\n\r\n        if( name === ''){\r\n            this.setState({errors : { name : 'Name is Required'}});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors : { email : 'Email is Required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n           this.setState({errors : { phone :'Phone is Required'}});\r\n           return;\r\n        }\r\n\r\n      const newContact ={\r\n            // id:uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n\r\n        ///SUBMIT CODE///\r\n        this.props.addContact(newContact)\r\n\r\n\r\n       \r\n          //ClearState\r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n           \r\n        \r\n        });\r\n        this.props.history.push('/');\r\n\r\n        \r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name] : e.target.value});\r\n   \r\n    render() {\r\n        const {errors,name,email,phone}  =this.state;\r\n        return(\r\n            //const {name,email,phone} =this.state;\r\n        <div className = \"card mb-3\">\r\n            <div className = \"card-header\">AddContact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit = {this.onSubmit} >\r\n                    {/* <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" \r\n                        className=\"form-control form-control-lg\"\r\n                         placeholder=\"Enter name...\" \r\n                         name=\"name\" \r\n                         value ={name}  onChange = {this.onChange}  /> \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\"\r\n                         className=\"form-control form-control-lg\" \r\n                         placeholder=\"Enter email...\"\r\n                          name=\"email\" \r\n                           value={email} onChange={this.onChange}     /> \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <input type=\"text\"\r\n                         className=\"form-control form-control-lg\"\r\n                          placeholder=\"Enter phone...\" \r\n                          name=\"phone\"\r\n                           value={phone} onChange = {this.onChange} /> \r\n                    </div> */}\r\n\r\n                <TextInputGroup \r\n                    label =\"Name\"\r\n                    name =\"name\"\r\n                    placeholder =\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error ={errors.name} />\r\n                    \r\n                <TextInputGroup\r\n\r\n                    label =\"Email\"\r\n                    name =\"email\"\r\n                    placeholder =\"Enter Email\"\r\n                    type =\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange} \r\n                    error = {errors.email}\r\n                    />\r\n\r\n                <TextInputGroup\r\n                    label =\"Phone\"\r\n                    name =\"phone\"\r\n                    placeholder =\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error = {errors.phone}\r\n\r\n                    />\r\n\r\n                <input type=\"submit\" value=\"Addcontact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n               \r\n            </div>\r\n            </div>\r\n            \r\n                \r\n          \r\n        )\r\n\r\n    }\r\n}\r\n\r\nAddContact.propTypes={\r\n    addContact:PropTypes.func.isRequired\r\n}\r\nexport default  connect(null, {addContact})(AddContact);\r\n","export default () =>{\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\"> About contact manager</h1>\r\n            <p className=\"lead\">simple app to managecontact</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}"," import React from 'react';\r\n\r\n export default ()=>{\r\n     return(\r\n         <div>\r\n                <h1 className=\"display-4\"><span className=\"text-danger\"> 404 </span> page Not Found</h1>\r\n                <p className =\"lead\">Sorry,page doesnot exist</p>\r\n         </div>\r\n    )\r\n }","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n        state={\r\n            title :' ',\r\n            body: '  '\r\n        }\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data =>this.setState({\r\n            title : data.title,\r\n            body : data.body\r\n        }))\r\n}\r\n\r\n    render() {\r\n        const {title,body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <h1>{body}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\n\r\n//import {v4 as uuid} from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getContact,updateContact} from '../../actions/contactAction';\r\n\r\n\r\n\r\nclass EditContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors :{}\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps,nextState){\r\n        const {name,email,phone} =nextProps.contact;\r\n        this.setState({\r\n            name,\r\n            email,\r\n            phone\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { id } =this.props.match.params;\r\n        this.props.getContact(id);\r\n    }\r\n\r\n    // async componentDidMount(){\r\n    //     const {id} = this.props.match.params;\r\n    //     const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n       \r\n    //     const contact =res.data;\r\n    //     console.log(contact);\r\n    //     this.setState({\r\n    //         name:contact.name,\r\n    //         email:contact.email,\r\n    //         phone:contact.phone\r\n    //     });    \r\n    // }\r\n\r\n    // async componentDidMount(){\r\n        \r\n    //     const res = await axios\r\n    //   .get('https://jsonplaceholder.typicode.com/users');\r\n    //     this.setState({contacts:res.data})\r\n    // }\r\n   \r\n    \r\n    onSubmit = e => {\r\n       \r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        const {name,email,phone}  =this.state;\r\n\r\n        //Check for Errors\r\n\r\n        if( name === ''){\r\n            this.setState({errors : { name : 'Name is Required'}});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors : { email : 'Email is Required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n           this.setState({errors : { phone :'Phone is Required'}});\r\n           return;\r\n        }\r\n        \r\n        const {id} = this.props.match.params;\r\n\r\n        const updContact = {\r\n            id,\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n       \r\n       this.props.updateContact(updContact);\r\n\r\n        //clear state\r\n\r\n        this.setState({\r\n            name :'',\r\n            email:'',\r\n            phone:'',\r\n            errors :{}\r\n        })\r\n    this.props.history.push('/');\r\n\r\n}\r\n\r\n    onChange = e => this.setState({ [e.target.name] : e.target.value});\r\n   \r\n    render() {\r\n        const {errors,name,email,phone}  =this.state;\r\n        return(\r\n            //const {name,email,phone} =this.state;\r\n          \r\n            <div className = \"card mb-3\">\r\n            <div className = \"card-header\">EditContact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit = {this.onSubmit.bind(this)} >\r\n                    {/* <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" \r\n                        className=\"form-control form-control-lg\"\r\n                         placeholder=\"Enter name...\" \r\n                         name=\"name\" \r\n                         value ={name}  onChange = {this.onChange}  /> \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\"\r\n                         className=\"form-control form-control-lg\" \r\n                         placeholder=\"Enter email...\"\r\n                          name=\"email\" \r\n                           value={email} onChange={this.onChange}     /> \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <input type=\"text\"\r\n                         className=\"form-control form-control-lg\"\r\n                          placeholder=\"Enter phone...\" \r\n                          name=\"phone\"\r\n                           value={phone} onChange = {this.onChange} /> \r\n                    </div> */}\r\n\r\n                <TextInputGroup \r\n                    label =\"Name\"\r\n                    name =\"name\"\r\n                    placeholder =\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error ={errors.name} />\r\n                    \r\n                <TextInputGroup\r\n\r\n                    label =\"Email\"\r\n                    name =\"email\"\r\n                    placeholder =\"Enter Email\"\r\n                    type =\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange} \r\n                    error = {errors.email}\r\n                    />\r\n\r\n                <TextInputGroup\r\n                    label =\"Phone\"\r\n                    name =\"phone\"\r\n                    placeholder =\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error = {errors.phone}\r\n\r\n                    />\r\n                   \r\n\r\n                <input type=\"submit\" value=\"Updatecontact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n               \r\n            </div>\r\n            </div>\r\n           \r\n               \r\n           \r\n        )\r\n\r\n    }\r\n}\r\nEditContact.propTypes={\r\n    contact: PropTypes.object.isRequired,\r\n    getContact: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    contact:state.contact.contact\r\n});\r\n\r\nexport default  connect(mapStateToProps, \r\n    { getContact ,updateContact})\r\n    (EditContact);\r\n","import {GET_CONTACTS,DELETE_CONTACT,ADD_CONTACT,GET_CONTACT,UPDATE_CONTACT} from '../actions/types';\r\n\r\n\r\n// const initialState ={\r\n//   contacts:[\r\n//     {\r\n//         id:1,\r\n//         name:'geethamadhuri',\r\n//         email:'geethamadhuri@gmail.com',\r\n//         phone:'8143382954'\r\n//     },\r\n//     {\r\n//         id:2,\r\n//         name:'karthik',\r\n//         email:'karthik@gmail.com',\r\n//         phone:'9502956135'\r\n//     },\r\n//     {\r\n//         id:3,\r\n//         name:'bala',\r\n//         email:'bala@gmail.com',\r\n//         phone:'98767576464'\r\n//     }\r\n//   ]\r\n// };\r\n\r\nconst initialState={\r\n  contacts:[],\r\n  contact:{}\r\n};\r\n\r\nexport default function(state=initialState,action)\r\n{\r\n  switch (action.type) {\r\n  case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n\r\n      case GET_CONTACT:\r\n      return {\r\n        ...state, //current state\r\n        contact: action.payload    //contact: state value called contact which is in object fill them in payload\r\n      };\r\n\r\n\r\n      case DELETE_CONTACT:\r\n        return {\r\n          ...state,//iNITIAL STATE\r\n\r\n          contacts:state.contacts.filter(contacts => contacts.id !== action.payload)\r\n        };\r\n\r\n        case ADD_CONTACT:\r\n          return {\r\n            ...state,\r\n            contacts:[action.payload , ...state.contacts]\r\n          };\r\n\r\n          case UPDATE_CONTACT:\r\n          return {\r\n            ...state,\r\n            contacts: state.contacts.map(contact => contact.id === action.payload.id \r\n              ? (contact = action.payload) \r\n              : contact )\r\n          };\r\n\r\n\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport contactReducer from './contactReducer';\r\n\r\nexport default combineReducers({\r\n    contact : contactReducer\r\n});","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nconst initialState={};\r\n\r\nconst middleware=[thunk];\r\n\r\nconst store=createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware),\r\n\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n    \r\n    ));\r\n    \r\n    export default store;","import React,{Component} from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport {HashRouter as Router,Route,Switch } from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport About from './components/pages/About';\nimport NotFoundpage from './components/pages/NotFoundPage';\nimport Test from './components/Test/Test';\nimport EditContact from './components/contacts/EditContact';\n import {Provider} from 'react-redux';\n import store from './store';\n\nclass App extends Component{\n  render(){\n    return(\n  <Provider store ={store}>\n      <Router>\n      <div className = \"App\">\n           <Header branding = 'ContactManager1'/>\n          \n           <div className=\"container\">\n           <Switch>\n             <Route exact path='/' component={Contacts} />\n             <Route exact path=\"/contact/add\" component = {AddContact} />\n             <Route exact path='/contact/edit/:id'  component ={EditContact} />\n             <Route exact path=\"/about\" component ={About} />\n             <Route exact path=\"/test\" component ={Test} />\n           \n             <Route component ={NotFoundpage} />\n           </Switch>\n         \n          </div>\n          </div>\n          </Router>\n          </Provider>\n     \n      \n\n \n        );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}